{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesActivitiesForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchAllActivities } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutinesActivitiesForm = ({\n  pendingActivities,\n  setPendingActivities,\n  routineActivities,\n  setErrorMessage,\n  id\n}) => {\n  _s();\n\n  const [activityList, setActivityList] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState({\n    routineId: id,\n    activityId: null,\n    count: 0,\n    duration: 0,\n    name: ''\n  });\n\n  const fetchData = async () => {\n    try {\n      const results = await fetchAllActivities();\n      setActivityList(results);\n    } catch (error) {\n      throw error;\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  console.log(pendingActivities);\n\n  const handleSelectChange = event => {\n    const selectedName = event.target.value;\n    const selectedIndex = event.target.options.selectedIndex;\n    const activityId = Number(event.target.options[selectedIndex].getAttribute('data-key'));\n    pendingActivities.forEach(activity => {\n      if (activityId === activity.activityId) {\n        setErrorMessage('You already queued up this activity!');\n        return;\n      }\n    });\n    routineActivities.forEach(activity => {\n      if (activityId === activity.activityId) {\n        setErrorMessage('This activity is already part of your routine!');\n        return;\n      }\n    });\n    setSelectedActivity({ ...selectedActivity,\n      activityId: activityId,\n      name: selectedName\n    });\n  };\n\n  const handleNumberChange = event => {\n    setSelectedActivity({ ...selectedActivity,\n      [event.target.name]: Number(event.target.value)\n    });\n  };\n\n  const pushToStateArray = selectedActivity => {\n    const newArray = [...pendingActivities];\n    newArray.push(selectedActivity);\n    return newArray;\n  };\n\n  const handleAddActivity = event => {\n    event.preventDefault();\n    setErrorMessage('');\n\n    if (!selectedActivity.name) {\n      setErrorMessage('Please choose an activity to add to your routine!');\n      return;\n    } // pendingActivities.forEach((pendingActivity) => {\n    //     if (routineActivities[i].activityId === selectedActivity.activityId) {\n    //         setErrorMessage('This activity is already part of your routine!');\n    //         return;\n    //     }\n    // })\n\n\n    const newObject = pushToStateArray(selectedActivity);\n    setPendingActivities(newObject);\n  }; // console.log(\"PENDING => \", pendingActivities)\n  // console.log(\"ROUTINE => \", routineActivities)\n\n\n  const handleDelete = activityId => {\n    for (let i = 0; i < activityList.length; i++) {\n      if (pendingActivities[i].activityId === activityId) {\n        pendingActivities.splice(i, 1);\n        setPendingActivities([...pendingActivities]);\n        return;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"activities-list\",\n      onChange: handleSelectChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), activityList ? activityList.map(({\n        id,\n        name\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-key\": id,\n          value: name,\n          children: name\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 28\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Count: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"count\",\n        value: selectedActivity.count,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Duration (minutes): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"duration\",\n        value: selectedActivity.duration,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddActivity,\n      children: \"Add activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pendingActivities.length > 0 ? pendingActivities.map(({\n        name,\n        activityId\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons\",\n            onClick: () => handleDelete(activityId),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), \" \", name]\n        }, activityId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRoutinesActivitiesForm, \"CNFJKCU/n6UoPjHEg1/i9c6fShc=\");\n\n_c = MyRoutinesActivitiesForm;\nexport default MyRoutinesActivitiesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutinesActivitiesForm\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesActivitiesForm.jsx"],"names":["React","useState","useEffect","fetchAllActivities","MyRoutinesActivitiesForm","pendingActivities","setPendingActivities","routineActivities","setErrorMessage","id","activityList","setActivityList","selectedActivity","setSelectedActivity","routineId","activityId","count","duration","name","fetchData","results","error","console","log","handleSelectChange","event","selectedName","target","value","selectedIndex","options","Number","getAttribute","forEach","activity","handleNumberChange","pushToStateArray","newArray","push","handleAddActivity","preventDefault","newObject","handleDelete","i","length","splice","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport {fetchAllActivities} from '../api';\n\nconst MyRoutinesActivitiesForm = ({pendingActivities, setPendingActivities, routineActivities, setErrorMessage, id}) => {\n    const [activityList, setActivityList] = useState([]);\n\n    const [selectedActivity, setSelectedActivity] = useState({\n        routineId: id,\n        activityId: null,\n        count: 0,\n        duration: 0,\n        name: ''\n    });\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchAllActivities();\n            setActivityList(results);\n        } catch (error) {\n            throw error;\n        };\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\nconsole.log(pendingActivities)\n    const handleSelectChange = (event) => {\n        const selectedName = event.target.value;\n        const selectedIndex = event.target.options.selectedIndex;\n        const activityId = Number(event.target.options[selectedIndex].getAttribute('data-key'));\n        pendingActivities.forEach((activity) => {\n            if (activityId === activity.activityId) {\n                setErrorMessage('You already queued up this activity!');\n                return;    \n            }\n        })\n        routineActivities.forEach((activity) => {\n            if (activityId === activity.activityId) {\n                setErrorMessage('This activity is already part of your routine!');\n                return;    \n            }\n        })\n        setSelectedActivity({...selectedActivity, activityId: activityId, name: selectedName});\n    }\n\n    const handleNumberChange = (event) => {\n        setSelectedActivity({...selectedActivity, [event.target.name]: Number(event.target.value)});\n    }\n\n    const pushToStateArray = (selectedActivity) => {\n        const newArray = [...pendingActivities];\n        newArray.push(selectedActivity);\n        return newArray;\n    }\n\n    const handleAddActivity = (event) => {\n        event.preventDefault();\n        setErrorMessage('');\n        if (!selectedActivity.name) {\n            setErrorMessage('Please choose an activity to add to your routine!');\n            return;\n        }\n\n        // pendingActivities.forEach((pendingActivity) => {\n            \n        //     if (routineActivities[i].activityId === selectedActivity.activityId) {\n        //         setErrorMessage('This activity is already part of your routine!');\n        //         return;\n        //     }\n        // })\n\n        const newObject = pushToStateArray(selectedActivity);\n        setPendingActivities(newObject);\n    }\n// console.log(\"PENDING => \", pendingActivities)\n// console.log(\"ROUTINE => \", routineActivities)\n\n    const handleDelete = (activityId) => {\n        for (let i = 0; i < activityList.length; i++) {\n            if (pendingActivities[i].activityId === activityId) {\n                pendingActivities.splice(i, 1);\n                setPendingActivities([...pendingActivities])\n                return;\n            }\n        }\n    }\n\n    return (\n        <>\n            <select name='activities-list' onChange={handleSelectChange}>\n                <option />\n                {activityList ? activityList.map(({id, name}) => {\n                    return <option key={id} data-key={id} value={name}>{name}</option>\n                }) : null}\n            </select>\n            <label>\n                <span>Count: </span>\n                <input type='number' name='count' value={selectedActivity.count} onChange={handleNumberChange} />\n            </label>\n            <label>\n                <span>Duration (minutes): </span>\n                <input type='number' name='duration' value={selectedActivity.duration} onChange={handleNumberChange} />\n            </label>\n            <button onClick={handleAddActivity}>Add activity</button>\n            <ul>\n                {pendingActivities.length > 0 ? pendingActivities.map(({name, activityId}) => {\n                    return (\n                        <li key={activityId}>\n                            <span className='material-icons' onClick={() => handleDelete(activityId)}>delete</span> {name}\n                        </li>\n                    )\n                }) : null}\n            </ul>\n        </>\n    )\n}\n\nexport default MyRoutinesActivitiesForm;"]},"metadata":{},"sourceType":"module"}