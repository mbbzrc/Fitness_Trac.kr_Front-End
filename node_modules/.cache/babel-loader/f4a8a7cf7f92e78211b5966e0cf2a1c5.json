{"ast":null,"code":"export const BASE_URL = 'https://secret-peak-53848.herokuapp.com';\n\nfunction createHeaders() {\n  // add check for token and add if statement for token\n  if (localStorage.getItem('token')) {\n    const token = localStorage.getItem('token');\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n  } else {\n    return {\n      'Content-Type': 'application/json'\n    };\n  }\n\n  ;\n}\n\nexport async function registerUser(username, password) {\n  try {\n    const response = await fetch(`${BASE_URL}/api/users/register`, {\n      method: 'POST',\n      headers: createHeaders(),\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error(data.message);\n    }\n\n    ;\n    const user = await response.json();\n    localStorage.setItem('token', user.token);\n    return user;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function loginUser(username, password) {\n  try {\n    const response = await fetch(`${BASE_URL}/api/users/login`, {\n      method: 'POST',\n      headers: createHeaders(),\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error(data.message);\n    }\n\n    ;\n    const data = await response.json();\n    localStorage.setItem('token', data.token);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n} // export function checkCurrentUser() {\n//     const user = JSON.parse(localStorage.getItem('token'));\n//     token ? true : false;\n// }\n// export function clearCurrentUser() {\n//     localStorage.removeItem('token');\n// }\n\nexport async function fetchAllActivities() {\n  try {\n    const response = await fetch(`${BASE_URL}/api/activities`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/api/index.js"],"names":["BASE_URL","createHeaders","localStorage","getItem","token","registerUser","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","message","user","json","setItem","error","loginUser","fetchAllActivities"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,yCAAjB;;AAEP,SAASC,aAAT,GAAyB;AACrB;AACA,MAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/B,UAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAO;AACH,sBAAe,kBADZ;AAEH,uBAAiB,UAASC,KAAM;AAF7B,KAAP;AAIH,GAND,MAMO;AACH,WAAO;AACH,sBAAe;AADZ,KAAP;AAGH;;AAAA;AACJ;;AAED,OAAO,eAAeC,YAAf,CAA4BC,QAA5B,EAAsCC,QAAtC,EAAgD;AACnD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,QAAS,qBAAb,EAAmC;AAC3DU,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,OAAO,EAAEV,aAAa,EAFqC;AAG3DW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,QAAAA,QAAQ,EAAEA,QADO;AAEjBC,QAAAA,QAAQ,EAAEA;AAFO,OAAf;AAHqD,KAAnC,CAA5B;;AAQA,QAAI,CAACC,QAAQ,CAACO,EAAd,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAUC,IAAI,CAACC,OAAf,CAAN;AACH;;AAAA;AACD,UAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAnB;AACAlB,IAAAA,YAAY,CAACmB,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACf,KAAnC;AACA,WAAOe,IAAP;AACH,GAfD,CAeE,OAAOG,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ;AAED,OAAO,eAAeC,SAAf,CAAyBjB,QAAzB,EAAmCC,QAAnC,EAA6C;AAChD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,QAAS,kBAAb,EAAgC;AACxDU,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,OAAO,EAAEV,aAAa,EAFkC;AAGxDW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,QAAAA,QAAQ,EAAEA,QADO;AAEjBC,QAAAA,QAAQ,EAAEA;AAFO,OAAf;AAHkD,KAAhC,CAA5B;;AAQA,QAAI,CAACC,QAAQ,CAACO,EAAd,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAUC,IAAI,CAACC,OAAf,CAAN;AACH;;AAAA;AACD,UAAMD,IAAI,GAAG,MAAMT,QAAQ,CAACY,IAAT,EAAnB;AACAlB,IAAAA,YAAY,CAACmB,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACb,KAAnC;AACA,WAAOa,IAAP;AACH,GAfD,CAeE,OAAOK,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,OAAO,eAAeE,kBAAf,GAAoC;AACvC,MAAI;AACA,UAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,QAAS,iBAAb,CAA5B;AACA,UAAMiB,IAAI,GAAG,MAAMT,QAAQ,CAACY,IAAT,EAAnB;AACA,WAAOH,IAAP;AACH,GAJD,CAIE,OAAOK,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ","sourcesContent":["export const BASE_URL = 'https://secret-peak-53848.herokuapp.com';\n\nfunction createHeaders() {\n    // add check for token and add if statement for token\n    if (localStorage.getItem('token')) {\n        const token = localStorage.getItem('token');\n        return {\n            'Content-Type':'application/json',\n            'Authorization':`Bearer ${token}`\n        }\n    } else {\n        return {\n            'Content-Type':'application/json'\n        }; \n    };\n}\n\nexport async function registerUser(username, password) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/users/register`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        });\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        const user = await response.json();\n        localStorage.setItem('token', user.token);\n        return user;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function loginUser(username, password) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/users/login`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        });\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// export function checkCurrentUser() {\n//     const user = JSON.parse(localStorage.getItem('token'));\n//     token ? true : false;\n// }\n\n// export function clearCurrentUser() {\n//     localStorage.removeItem('token');\n// }\n\nexport async function fetchAllActivities() {\n    try {\n        const response = await fetch(`${BASE_URL}/api/activities`);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}"]},"metadata":{},"sourceType":"module"}