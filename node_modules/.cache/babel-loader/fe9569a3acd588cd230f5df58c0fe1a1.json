{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutines.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchRoutinesByUser, createRoutine, deleteRoutine } from '../api';\nimport { MyRoutinesActivitiesForm, MyRoutinesForm } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = ({\n  currentUser\n}) => {\n  _s();\n\n  const [myRoutinesList, setMyRoutinesList] = useState([]);\n  const [form, setForm] = useState({\n    name: '',\n    goal: '',\n    isPublic: false\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const results = await fetchRoutinesByUser(currentUser.username);\n      setMyRoutinesList(results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleFormChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleOptionChange = event => {\n    let isPublicValue;\n\n    if (event.target.value == 'true') {\n      isPublicValue = true;\n    } else if (event.target.value == 'false') {\n      isPublicValue = false;\n    }\n\n    setForm({ ...form,\n      isPublic: isPublicValue\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      name,\n      goal,\n      isPublic\n    } = form;\n\n    try {\n      await createRoutine(name, goal, isPublic);\n      fetchData();\n    } catch (error) {\n      console.error(error);\n    }\n  }; // const handleEditToggle = (id) => {\n  //     const newList = myRoutinesList.map((routine) => {\n  //         if (routine.id === id) {\n  //             const toggledRoutine = {\n  //                 ...routine,\n  //                 isComplete: !routine.isComplete\n  //             }\n  //             return toggledRoutine;\n  //         } else {\n  //             return routine;\n  //         }\n  //     })\n  // }\n\n\n  const handleDelete = async id => {\n    try {\n      const results = await deleteRoutine(id);\n      fetchData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"my-routines\",\n      children: [/*#__PURE__*/_jsxDEV(MyRoutinesForm, {\n        form: form,\n        errorMessage: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Routines:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: myRoutinesList.length > 0 && myRoutinesList.map(({\n          name,\n          goal,\n          creatorName,\n          activities,\n          isPublic,\n          id\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"routine\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              onClick: () => handleEditToggle(id),\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              onClick: () => handleDelete(id),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Routine: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"routine-name\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Goal: \", goal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"routine-activities\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Activities: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: activities.length > 0 && activities.map(({\n                  name,\n                  description,\n                  count,\n                  duration,\n                  routineActivityId\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [name, \": \", description, \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"count\",\n                      children: [\"Count: \", count]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 96\n                    }, this), \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"duration\",\n                      children: [\"Duration: \", duration]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 144\n                    }, this)]\n                  }, routineActivityId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 44\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", isPublic ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"public\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"private\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created by: \", creatorName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MyRoutines, \"Qp54pCteWS3hUkyxSO+Sk/0uzag=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutines.jsx"],"names":["React","useState","useEffect","fetchRoutinesByUser","createRoutine","deleteRoutine","MyRoutinesActivitiesForm","MyRoutinesForm","MyRoutines","currentUser","myRoutinesList","setMyRoutinesList","form","setForm","name","goal","isPublic","errorMessage","setErrorMessage","fetchData","results","username","error","console","handleFormChange","event","target","value","handleOptionChange","isPublicValue","handleSubmit","preventDefault","handleDelete","id","length","map","creatorName","activities","handleEditToggle","description","count","duration","routineActivityId"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport {fetchRoutinesByUser, createRoutine, deleteRoutine} from '../api';\n\nimport {\n    MyRoutinesActivitiesForm,\n    MyRoutinesForm\n} from './index';\n\nconst MyRoutines = ({currentUser}) => {\n    const [myRoutinesList, setMyRoutinesList] = useState([]);\n    const [form, setForm] = useState({\n        name: '',\n        goal: '',\n        isPublic: false\n    })\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchRoutinesByUser(currentUser.username);\n            setMyRoutinesList(results);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value});\n    }\n\n    const handleOptionChange = (event) => {\n        let isPublicValue;\n        if (event.target.value == 'true') {\n            isPublicValue = true;\n        } else if (event.target.value == 'false') {\n            isPublicValue = false;\n        }\n        setForm({...form, isPublic: isPublicValue});\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const {name, goal, isPublic} = form;\n        try {\n            await createRoutine(name, goal, isPublic);\n            fetchData();  \n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    // const handleEditToggle = (id) => {\n    //     const newList = myRoutinesList.map((routine) => {\n    //         if (routine.id === id) {\n    //             const toggledRoutine = {\n    //                 ...routine,\n    //                 isComplete: !routine.isComplete\n    //             }\n    //             return toggledRoutine;\n    //         } else {\n    //             return routine;\n    //         }\n    //     })\n    // }\n\n    const handleDelete = async (id) => {\n        try {\n            const results = await deleteRoutine(id);\n            fetchData();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <>\n            <div id='my-routines'>\n                <MyRoutinesForm form={form} errorMessage={errorMessage} />\n                <h2>My Routines:</h2>\n                <ul>\n                    {myRoutinesList.length > 0 && myRoutinesList.map(({name, goal, creatorName, activities, isPublic, id}) => {\n                        return <div key={id} className='routine'>\n                        <span className='material-icons' onClick={() => handleEditToggle(id)}>edit</span>\n                        <span className='material-icons' onClick={() => handleDelete(id)}>delete</span>\n                        <h3>Routine: <span className='routine-name'>{name}</span></h3>\n                        <p>Goal: {goal}</p>\n                        <div className='routine-activities'>\n                            <p>Activities: </p>\n                            <ul>\n                                {activities.length > 0 && activities.map(({name, description, count, duration, routineActivityId}) => {\n                                    return <li key={routineActivityId}>{name}: {description} | <span className='count'>Count: {count}</span> | <span className='duration'>Duration: {duration}</span></li>\n                                })}\n                            </ul>\n                        </div>\n                        <p>Status: {isPublic ? <span>public</span> : <span>private</span>}</p>\n                        <p>Created by: {creatorName}</p>\n                    </div>\n                    })}\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}