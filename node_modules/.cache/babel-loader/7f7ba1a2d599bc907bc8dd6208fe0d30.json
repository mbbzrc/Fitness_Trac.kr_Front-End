{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesActivitiesForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchAllActivities } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutinesActivitiesForm = ({\n  errorMessage,\n  setErrorMessage,\n  id\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    name: '',\n    goal: '',\n    isPublic: false\n  });\n  const [activityList, setActivityList] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState({\n    activityId: '',\n    count: '',\n    duration: ''\n  });\n\n  const fetchData = async () => {\n    try {\n      const results = await fetchAllActivities();\n      setActivityList(results);\n    } catch (error) {\n      throw error;\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleSelectChange = event => {\n    const selectedIndex = event.target.options.selectedIndex;\n    const activityId = event.target.options[selectedIndex].getAttribute('data-key');\n    setSelectedActivity({\n      activity\n    });\n  };\n\n  const handleAddActivity = async event => {\n    event.preventDefault();\n    const {\n      activityId,\n      count,\n      duration\n    } = selectedActivity;\n    await addActivityToRoutine(routineId, activityId, count, duration);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"activities\",\n      onChange: handleSelectChange,\n      children: activityList ? activityList.map(({\n        id,\n        name\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-key\": id,\n          value: name,\n          children: name\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 28\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onSubmit: handleAddActivity,\n      children: \"Add to routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRoutinesActivitiesForm, \"Ic7kmpptmcWPkSXJKJtLRBGoSlk=\");\n\n_c = MyRoutinesActivitiesForm;\nexport default MyRoutinesActivitiesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutinesActivitiesForm\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesActivitiesForm.jsx"],"names":["React","useState","useEffect","fetchAllActivities","MyRoutinesActivitiesForm","errorMessage","setErrorMessage","id","form","setForm","name","goal","isPublic","activityList","setActivityList","selectedActivity","setSelectedActivity","activityId","count","duration","fetchData","results","error","handleSelectChange","event","selectedIndex","target","options","getAttribute","activity","handleAddActivity","preventDefault","addActivityToRoutine","routineId","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAAQC,kBAAR,QAAiC,QAAjC;;;;AAEA,MAAMC,wBAAwB,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,eAAf;AAAgCC,EAAAA;AAAhC,CAAD,KAAyC;AAAA;;AACtE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAC7BS,IAAAA,IAAI,EAAE,EADuB;AAE7BC,IAAAA,IAAI,EAAE,EAFuB;AAG7BC,IAAAA,QAAQ,EAAE;AAHmB,GAAD,CAAhC;AAMA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC;AACrDgB,IAAAA,UAAU,EAAE,EADyC;AAErDC,IAAAA,KAAK,EAAE,EAF8C;AAGrDC,IAAAA,QAAQ,EAAE;AAH2C,GAAD,CAAxD;;AAMA,QAAMC,SAAS,GAAG,YAAY;AAC1B,QAAI;AACA,YAAMC,OAAO,GAAG,MAAMlB,kBAAkB,EAAxC;AACAW,MAAAA,eAAe,CAACO,OAAD,CAAf;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,YAAMA,KAAN;AACH;;AAAA;AACJ,GAPD;;AASApB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,kBAAkB,GAAIC,KAAD,IAAW;AAClC,UAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBF,aAA3C;AACA,UAAMR,UAAU,GAAGO,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBF,aAArB,EAAoCG,YAApC,CAAiD,UAAjD,CAAnB;AACAZ,IAAAA,mBAAmB,CAAC;AAACa,MAAAA;AAAD,KAAD,CAAnB;AACH,GAJD;;AAMA,QAAMC,iBAAiB,GAAG,MAAON,KAAP,IAAiB;AACvCA,IAAAA,KAAK,CAACO,cAAN;AACA,UAAM;AAACd,MAAAA,UAAD;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,QAAgCJ,gBAAtC;AACA,UAAMiB,oBAAoB,CAACC,SAAD,EAAYhB,UAAZ,EAAwBC,KAAxB,EAA+BC,QAA/B,CAA1B;AACH,GAJD;;AAMA,sBACI;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,QAAQ,EAAEI,kBAApC;AAAA,gBACKV,YAAY,GAAGA,YAAY,CAACqB,GAAb,CAAiB,CAAC;AAAC3B,QAAAA,EAAD;AAAKG,QAAAA;AAAL,OAAD,KAAgB;AAC7C,4BAAO;AAAiB,sBAAUH,EAA3B;AAA+B,UAAA,KAAK,EAAEG,IAAtC;AAAA,oBAA6CA;AAA7C,WAAaH,EAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFe,CAAH,GAER;AAHT;AAAA;AAAA;AAAA;AAAA,YADJ,EAMKF,YAAY,iBACT;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YAPR,eASI;AAAQ,MAAA,QAAQ,EAAEyB,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAaH,CArDD;;GAAM1B,wB;;KAAAA,wB;AAuDN,eAAeA,wBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport {fetchAllActivities} from '../api';\n\nconst MyRoutinesActivitiesForm = ({errorMessage, setErrorMessage, id}) => {\n    const [form, setForm] = useState({\n        name: '',\n        goal: '',\n        isPublic: false\n    })\n\n    const [activityList, setActivityList] = useState([]);\n\n    const [selectedActivity, setSelectedActivity] = useState({\n        activityId: '',\n        count: '',\n        duration: '',\n    });\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchAllActivities();\n            setActivityList(results);\n        } catch (error) {\n            throw error;\n        };\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const handleSelectChange = (event) => {\n        const selectedIndex = event.target.options.selectedIndex;\n        const activityId = event.target.options[selectedIndex].getAttribute('data-key');\n        setSelectedActivity({activity});\n    }\n\n    const handleAddActivity = async (event) => {\n        event.preventDefault();\n        const {activityId, count, duration} = selectedActivity;\n        await addActivityToRoutine(routineId, activityId, count, duration);\n    }\n\n    return (\n        <>\n            <select name='activities' onChange={handleSelectChange}>\n                {activityList ? activityList.map(({id, name}) => {\n                    return <option key={id} data-key={id} value={name}>{name}</option>\n                }) : null}\n            </select>\n            {errorMessage && (\n                <p className='error-message'>{errorMessage}</p>\n            )}\n            <button onSubmit={handleAddActivity}>Add to routine</button>\n        </>\n    )\n}\n\nexport default MyRoutinesActivitiesForm;"]},"metadata":{},"sourceType":"module"}