{"ast":null,"code":"export const BASE_URL = 'https://secret-peak-53848.herokuapp.com';\n\nfunction createHeaders() {\n  if (localStorage.getItem('token')) {\n    const token = localStorage.getItem('token'); //\n\n    console.log(token); //\n\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n  } else {\n    return {\n      'Content-Type': 'application/json'\n    };\n  }\n\n  ;\n}\n\nexport async function registerUser(username, password) {\n  try {\n    const response = await fetch(`${BASE_URL}/api/users/register`, {\n      method: 'POST',\n      headers: createHeaders(),\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    const user = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.message);\n    }\n\n    ;\n    localStorage.setItem('token', user.token);\n    return user;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function loginUser(username, password) {\n  try {\n    const response = await fetch(`${BASE_URL}/api/users/login`, {\n      method: 'POST',\n      headers: createHeaders(),\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.message);\n    }\n\n    ;\n    localStorage.setItem('token', data.token);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\nexport function checkCurrentUser() {\n  const user = JSON.parse(localStorage.getItem('token'));\n  return token ? true : false;\n}\nexport function clearCurrentUser() {\n  localStorage.removeItem('token');\n}\nexport async function fetchAllActivities() {\n  try {\n    const response = await fetch(`${BASE_URL}/api/activities`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function createActivity(name, description) {\n  try {\n    const response = await fetch(`${BASE_URL}/api/activities`, {\n      method: 'POST',\n      headers: createHeaders(),\n      body: JSON.stringify({\n        name: name,\n        description: description\n      })\n    });\n    const data = await response.json(); //\n\n    console.log('NEW ACTIVITY => ', data); //\n\n    if (!response.ok) {\n      throw new Error(data.message);\n    }\n\n    ;\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/api/index.js"],"names":["BASE_URL","createHeaders","localStorage","getItem","token","console","log","registerUser","username","password","response","fetch","method","headers","body","JSON","stringify","user","json","ok","Error","data","message","setItem","error","loginUser","checkCurrentUser","parse","clearCurrentUser","removeItem","fetchAllActivities","createActivity","name","description"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,yCAAjB;;AAEP,SAASC,aAAT,GAAyB;AACrB,MAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/B,UAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAD+B,CAE/B;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAH+B,CAI/B;;AACA,WAAO;AACH,sBAAe,kBADZ;AAEH,uBAAiB,UAASA,KAAM;AAF7B,KAAP;AAIH,GATD,MASO;AACH,WAAO;AACH,sBAAe;AADZ,KAAP;AAGH;;AAAA;AACJ;;AAED,OAAO,eAAeG,YAAf,CAA4BC,QAA5B,EAAsCC,QAAtC,EAAgD;AACnD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,qBAAb,EAAmC;AAC3DY,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,OAAO,EAAEZ,aAAa,EAFqC;AAG3Da,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,QAAAA,QAAQ,EAAEA,QADO;AAEjBC,QAAAA,QAAQ,EAAEA;AAFO,OAAf;AAHqD,KAAnC,CAA5B;AAQA,UAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AACA,QAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAUC,IAAI,CAACC,OAAf,CAAN;AACH;;AAAA;AACDpB,IAAAA,YAAY,CAACqB,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACb,KAAnC;AACA,WAAOa,IAAP;AACH,GAfD,CAeE,OAAOO,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ;AAED,OAAO,eAAeC,SAAf,CAAyBjB,QAAzB,EAAmCC,QAAnC,EAA6C;AAChD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,kBAAb,EAAgC;AACxDY,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,OAAO,EAAEZ,aAAa,EAFkC;AAGxDa,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,QAAAA,QAAQ,EAAEA,QADO;AAEjBC,QAAAA,QAAQ,EAAEA;AAFO,OAAf;AAHkD,KAAhC,CAA5B;AAQA,UAAMY,IAAI,GAAG,MAAMX,QAAQ,CAACQ,IAAT,EAAnB;;AACA,QAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAUC,IAAI,CAACC,OAAf,CAAN;AACH;;AAAA;AACDpB,IAAAA,YAAY,CAACqB,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACjB,KAAnC;AACA,WAAOiB,IAAP;AACH,GAfD,CAeE,OAAOG,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ;AAED,OAAO,SAASE,gBAAT,GAA4B;AAC/B,QAAMT,IAAI,GAAGF,IAAI,CAACY,KAAL,CAAWzB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAb;AACA,SAAOC,KAAK,GAAG,IAAH,GAAU,KAAtB;AACH;AAED,OAAO,SAASwB,gBAAT,GAA4B;AAC/B1B,EAAAA,YAAY,CAAC2B,UAAb,CAAwB,OAAxB;AACH;AAED,OAAO,eAAeC,kBAAf,GAAoC;AACvC,MAAI;AACA,UAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,iBAAb,CAA5B;AACA,UAAMqB,IAAI,GAAG,MAAMX,QAAQ,CAACQ,IAAT,EAAnB;AACA,WAAOG,IAAP;AACH,GAJD,CAIE,OAAOG,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ;AAED,OAAO,eAAeO,cAAf,CAA8BC,IAA9B,EAAoCC,WAApC,EAAiD;AACpD,MAAI;AACA,UAAMvB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,iBAAb,EAA+B;AACvDY,MAAAA,MAAM,EAAE,MAD+C;AAEvDC,MAAAA,OAAO,EAAEZ,aAAa,EAFiC;AAGvDa,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBgB,QAAAA,IAAI,EAAEA,IADW;AAEjBC,QAAAA,WAAW,EAAEA;AAFI,OAAf;AAHiD,KAA/B,CAA5B;AAQA,UAAMZ,IAAI,GAAG,MAAMX,QAAQ,CAACQ,IAAT,EAAnB,CATA,CAUA;;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCe,IAAhC,EAXA,CAYA;;AACA,QAAI,CAACX,QAAQ,CAACS,EAAd,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAUC,IAAI,CAACC,OAAf,CAAN;AACH;;AAAA;AACD,WAAOD,IAAP;AACH,GAjBD,CAiBE,OAAOG,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ","sourcesContent":["export const BASE_URL = 'https://secret-peak-53848.herokuapp.com';\n\nfunction createHeaders() {\n    if (localStorage.getItem('token')) {\n        const token = localStorage.getItem('token');\n        //\n        console.log(token)\n        //\n        return {\n            'Content-Type':'application/json',\n            'Authorization':`Bearer ${token}`\n        }\n    } else {\n        return {\n            'Content-Type':'application/json'\n        }; \n    };\n}\n\nexport async function registerUser(username, password) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/users/register`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        });\n        const user = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        localStorage.setItem('token', user.token);\n        return user;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function loginUser(username, password) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/users/login`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        localStorage.setItem('token', data.token);\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport function checkCurrentUser() {\n    const user = JSON.parse(localStorage.getItem('token'));\n    return token ? true : false;\n}\n\nexport function clearCurrentUser() {\n    localStorage.removeItem('token');\n}\n\nexport async function fetchAllActivities() {\n    try {\n        const response = await fetch(`${BASE_URL}/api/activities`);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function createActivity(name, description) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/activities`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                name: name,\n                description: description\n            })\n        });\n        const data = await response.json();\n        //\n        console.log('NEW ACTIVITY => ', data)\n        //\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}"]},"metadata":{},"sourceType":"module"}