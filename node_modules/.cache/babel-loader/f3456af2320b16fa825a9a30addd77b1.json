{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesActivitiesForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchAllActivities } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutinesActivitiesForm = ({\n  pendingActivities,\n  setPendingActivities,\n  errorMessage,\n  setErrorMessage,\n  id\n}) => {\n  _s();\n\n  const [activityList, setActivityList] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState({\n    routineId: id,\n    activityId: 1,\n    count: 1,\n    duration: 1,\n    name: ''\n  });\n\n  const fetchData = async () => {\n    try {\n      const results = await fetchAllActivities();\n      setActivityList(results);\n    } catch (error) {\n      throw error;\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleSelectChange = event => {\n    const selectedName = event.target.value;\n    const selectedIndex = event.target.options.selectedIndex;\n    const activityId = Number(event.target.options[selectedIndex].getAttribute('data-key'));\n    setSelectedActivity({ ...selectedActivity,\n      activityId: activityId,\n      name: selectedName\n    });\n  };\n\n  const handleNumberChange = event => {\n    setSelectedActivity({ ...selectedActivity,\n      [event.target.name]: Number(event.target.value)\n    });\n  };\n\n  const pushToStateArray = newActivity => {\n    const newArray = pendingActivities.slice();\n    return newArray.push(newActivity);\n  };\n\n  const handleAddActivity = event => {\n    event.preventDefault();\n    const newObject = pushToStateArray(selectedActivity);\n    setPendingActivities(newObject);\n  };\n\n  const handleDelete = activityId => {\n    console.log(activityId); // need to combine pendingActivity names and data\n  };\n\n  console.log(\"SELECTED ACT => \", selectedActivity);\n  console.log(\"PENDING ACTS => \", pendingActivities);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"activities-list\",\n      onChange: handleSelectChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), activityList ? activityList.map(({\n        id,\n        name\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-key\": id,\n          value: name,\n          children: name\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Count: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"count\",\n        value: selectedActivity.count,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Duration (minutes): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"duration\",\n        value: selectedActivity.duration,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddActivity,\n      children: \"Add activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pendingActivities.length > 0 ? pendingActivities.map(({\n        name,\n        activityId\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons\",\n            onClick: () => handleDelete(activityId),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), \" \", name]\n        }, activityId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRoutinesActivitiesForm, \"ZNrhE2Xfqj4Fi1qlT50HtmMeEPY=\");\n\n_c = MyRoutinesActivitiesForm;\nexport default MyRoutinesActivitiesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutinesActivitiesForm\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesActivitiesForm.jsx"],"names":["React","useState","useEffect","fetchAllActivities","MyRoutinesActivitiesForm","pendingActivities","setPendingActivities","errorMessage","setErrorMessage","id","activityList","setActivityList","selectedActivity","setSelectedActivity","routineId","activityId","count","duration","name","fetchData","results","error","handleSelectChange","event","selectedName","target","value","selectedIndex","options","Number","getAttribute","handleNumberChange","pushToStateArray","newActivity","newArray","slice","push","handleAddActivity","preventDefault","newObject","handleDelete","console","log","map","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport {fetchAllActivities} from '../api';\n\nconst MyRoutinesActivitiesForm = ({pendingActivities, setPendingActivities, errorMessage, setErrorMessage, id}) => {\n    const [activityList, setActivityList] = useState([]);\n\n    const [selectedActivity, setSelectedActivity] = useState({\n        routineId: id,\n        activityId: 1,\n        count: 1,\n        duration: 1,\n        name: ''\n    });\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchAllActivities();\n            setActivityList(results);\n        } catch (error) {\n            throw error;\n        };\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const handleSelectChange = (event) => {\n        const selectedName = event.target.value;\n        const selectedIndex = event.target.options.selectedIndex;\n        const activityId = Number(event.target.options[selectedIndex].getAttribute('data-key'));\n        setSelectedActivity({...selectedActivity, activityId: activityId, name: selectedName});\n    }\n\n    const handleNumberChange = (event) => {\n        setSelectedActivity({...selectedActivity, [event.target.name]: Number(event.target.value)});\n    }\n\n    const pushToStateArray = (newActivity) => {\n        const newArray = pendingActivities.slice();\n        return newArray.push(newActivity);\n    }\n\n    const handleAddActivity = (event) => {\n        event.preventDefault();\n        const newObject = pushToStateArray(selectedActivity);\n        setPendingActivities(newObject);\n    }\n\n    const handleDelete = (activityId) => {\n        console.log(activityId)\n        // need to combine pendingActivity names and data\n    }\n    console.log(\"SELECTED ACT => \", selectedActivity)\n    console.log(\"PENDING ACTS => \", pendingActivities)\n    return (\n        <>\n            <select name='activities-list' onChange={handleSelectChange}>\n                <option value={null}></option>\n                {/* placeholder option */}\n                {activityList ? activityList.map(({id, name}) => {\n                    return <option key={id} data-key={id} value={name}>{name}</option>\n                }) : null}\n            </select>\n            {errorMessage && (\n                <p className='error-message'>{errorMessage}</p>\n            )}\n            <label>\n                <span>Count: </span>\n                <input type='number' name='count' value={selectedActivity.count} onChange={handleNumberChange} />\n            </label>\n            <label>\n                <span>Duration (minutes): </span>\n                <input type='number' name='duration' value={selectedActivity.duration} onChange={handleNumberChange} />\n            </label>\n            <button onClick={handleAddActivity}>Add activity</button>\n            <ul>\n                {pendingActivities.length > 0 ? pendingActivities.map(({name, activityId}) => {\n                    return (\n                        <li key={activityId}>\n                            <span className='material-icons' onClick={() => handleDelete(activityId)}>delete</span> {name}\n                        </li>\n                    )\n                }) : null}\n            </ul>\n        </>\n    )\n}\n\nexport default MyRoutinesActivitiesForm;"]},"metadata":{},"sourceType":"module"}