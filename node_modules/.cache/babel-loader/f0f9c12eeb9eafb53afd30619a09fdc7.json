{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutines.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchRoutinesByUser } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = ({\n  currentUser\n}) => {\n  _s();\n\n  const [myRoutinesList, setMyRoutinesList] = useState([]);\n  const [form, setForm] = useState({\n    name: '',\n    goal: '',\n    isPublic: false\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const results = await fetchRoutinesByUser(currentUser.username);\n      setMyRoutinesList(results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleFormChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleOptionChange = event => {\n    if (event.target.value == 'true') ;\n    console.log('VALUE', value);\n    setForm({ ...form,\n      isPublic: value\n    });\n  }; // THIS IS NOT CHANGING THE VALUE CORRECTLY\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"FORM => \", form);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"my-routines\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create New Routine:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Routine name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: form.name,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Routine goal: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"goal\",\n            value: form.goal,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Share your routine?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"isPublic\",\n              value: false,\n              onChange: handleOptionChange,\n              checked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), \" Private\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"isPublic\",\n              value: true,\n              onChange: handleOptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), \" Public\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create routine\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Routines:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: myRoutinesList.length > 0 && myRoutinesList.map(({\n          name,\n          goal,\n          creatorName,\n          activities,\n          id\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"routine\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Routine: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"routine-name\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: goal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"routine-activities\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Activities: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: activities.length > 0 && activities.map(({\n                  name,\n                  description,\n                  count,\n                  duration,\n                  routineActivityId\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [name, \": \", description, \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"count\",\n                      children: [\"Count: \", count]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 96\n                    }, this), \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"duration\",\n                      children: [\"Duration: \", duration]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 144\n                    }, this)]\n                  }, routineActivityId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 44\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created by: \", creatorName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MyRoutines, \"Qp54pCteWS3hUkyxSO+Sk/0uzag=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutines.jsx"],"names":["React","useState","useEffect","fetchRoutinesByUser","MyRoutines","currentUser","myRoutinesList","setMyRoutinesList","form","setForm","name","goal","isPublic","errorMessage","setErrorMessage","fetchData","results","username","error","console","handleFormChange","event","target","value","handleOptionChange","log","handleSubmit","preventDefault","length","map","creatorName","activities","id","description","count","duration","routineActivityId"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport {fetchRoutinesByUser} from '../api';\n\nconst MyRoutines = ({currentUser}) => {\n    const [myRoutinesList, setMyRoutinesList] = useState([]);\n    const [form, setForm] = useState({\n        name: '',\n        goal: '',\n        isPublic: false\n    })\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchRoutinesByUser(currentUser.username);\n            setMyRoutinesList(results);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value});\n    }\n\n    const handleOptionChange = (event) => {\n        if (event.target.value == 'true') ;\n        console.log('VALUE', value)\n        setForm({...form, isPublic: value});\n    }\n    // THIS IS NOT CHANGING THE VALUE CORRECTLY\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"FORM => \", form)\n    }\n\n    return (\n        <>\n            <div id='my-routines'>\n                <form>\n                    <h2>Create New Routine:</h2>\n                    <label>\n                        <span>Routine name: </span>\n                        <input type='text' name='name' value={form.name} onChange={handleFormChange} />\n                    </label>\n                    <label>\n                        <span>Routine goal: </span>\n                        <input type='text' name='goal' value={form.goal} onChange={handleFormChange} />\n                    </label>\n                    <label>\n                        <span>Share your routine?</span>\n                        <div className='input-radio'>\n                            <input type='radio' name='isPublic' value={false} onChange={handleOptionChange} checked /> Private\n                            <input type='radio' name='isPublic' value={true} onChange={handleOptionChange} /> Public    \n                        </div>\n                    </label>\n                    {errorMessage && (\n                    <p className='error-message'>{errorMessage}</p>\n                    )}\n                    <input type='submit' value='Create routine' onClick={handleSubmit} />\n                </form>\n                <h2>My Routines:</h2>\n                <ul>\n                    {myRoutinesList.length > 0 && myRoutinesList.map(({name, goal, creatorName, activities, id}) => {\n                        return <div key={id} className='routine'>\n                        <h3>Routine: <span className='routine-name'>{name}</span></h3>\n                        <p>{goal}</p>\n                        <div className='routine-activities'>\n                            <p>Activities: </p>\n                            <ul>\n                                {activities.length > 0 && activities.map(({name, description, count, duration, routineActivityId}) => {\n                                    return <li key={routineActivityId}>{name}: {description} | <span className='count'>Count: {count}</span> | <span className='duration'>Duration: {duration}</span></li>\n                                })}\n                            </ul>\n                        </div>\n                        <p>Created by: {creatorName}</p>\n                    </div>\n                    })}\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}