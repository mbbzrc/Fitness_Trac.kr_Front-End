{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createRoutine } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyRoutinesForm = ({\n  fetchData,\n  errorMessage,\n  setErrorMessage\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    name: '',\n    goal: '',\n    isPublic: false\n  });\n\n  const handleFormChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleOptionChange = event => {\n    let isPublicValue;\n\n    if (event.target.value == 'true') {\n      isPublicValue = true;\n    } else if (event.target.value == 'false') {\n      isPublicValue = false;\n    }\n\n    setForm({ ...form,\n      isPublic: isPublicValue\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      name,\n      goal,\n      isPublic\n    } = form;\n\n    if (myRoutinesList.hasOwnProperty(name)) {\n      setErrorMessage('This routine already exists! Please choose another name.');\n      return;\n    }\n\n    try {\n      await createRoutine(name, goal, isPublic);\n      setForm({\n        name: '',\n        goal: '',\n        isPublic: false\n      });\n      fetchData();\n    } catch (error) {\n      console.error(error);\n    }\n  }; // const handleEditToggle = (id) => {\n  //     const newList = myRoutinesList.map((routine) => {\n  //         if (routine.id === id) {\n  //             const toggledRoutine = {\n  //                 ...routine,\n  //                 isComplete: !routine.isComplete\n  //             }\n  //             return toggledRoutine;\n  //         } else {\n  //             return routine;\n  //         }\n  //     })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Routine:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Routine name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: form.name,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Routine goal: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"goal\",\n        value: form.goal,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Share your routine?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-radio\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"isPublic\",\n          value: \"false\",\n          onChange: handleOptionChange,\n          checked: form.isPublic === false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \" Private\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"isPublic\",\n          value: \"true\",\n          onChange: handleOptionChange,\n          checked: form.isPublic === true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), \" Public\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Create routine\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyRoutinesForm, \"ZWzE2HT/yaKPzXP7ghTXtcWGCY4=\");\n\n_c = MyRoutinesForm;\nexport default MyRoutinesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutinesForm\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesForm.jsx"],"names":["React","useState","createRoutine","MyRoutinesForm","fetchData","errorMessage","setErrorMessage","form","setForm","name","goal","isPublic","handleFormChange","event","target","value","handleOptionChange","isPublicValue","handleSubmit","preventDefault","myRoutinesList","hasOwnProperty","error","console"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport {createRoutine} from '../api';\n\nconst MyRoutinesForm = ({fetchData, errorMessage, setErrorMessage}) => {\n    const [form, setForm] = useState({\n        name: '',\n        goal: '',\n        isPublic: false\n    })\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value});\n    }\n\n    const handleOptionChange = (event) => {\n        let isPublicValue;\n        if (event.target.value == 'true') {\n            isPublicValue = true;\n        } else if (event.target.value == 'false') {\n            isPublicValue = false;\n        }\n        setForm({...form, isPublic: isPublicValue});\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const {name, goal, isPublic} = form;\n        if (myRoutinesList.hasOwnProperty(name)) {\n            setErrorMessage('This routine already exists! Please choose another name.');\n            return;\n        }\n        try {\n            await createRoutine(name, goal, isPublic);\n            setForm({name: '', goal: '', isPublic: false});\n            fetchData();  \n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n        // const handleEditToggle = (id) => {\n    //     const newList = myRoutinesList.map((routine) => {\n    //         if (routine.id === id) {\n    //             const toggledRoutine = {\n    //                 ...routine,\n    //                 isComplete: !routine.isComplete\n    //             }\n    //             return toggledRoutine;\n    //         } else {\n    //             return routine;\n    //         }\n    //     })\n    // }\n\n    return (\n        <form>\n            <h2>Create New Routine:</h2>\n            <label>\n                <span>Routine name: </span>\n                <input type='text' name='name' value={form.name} onChange={handleFormChange} />\n            </label>\n            <label>\n                <span>Routine goal: </span>\n                <input type='text' name='goal' value={form.goal} onChange={handleFormChange} />\n            </label>\n            <label>\n                <span>Share your routine?</span>\n                <div className='input-radio'>\n                    <input type='radio' name='isPublic' value='false' onChange={handleOptionChange} checked={form.isPublic === false} /> Private\n                    <input type='radio' name='isPublic' value='true' onChange={handleOptionChange} checked={form.isPublic === true}  /> Public    \n                </div>\n            </label>\n            {errorMessage && (\n            <p className='error-message'>{errorMessage}</p>\n            )}\n            <input type='submit' value='Create routine' onClick={handleSubmit} />\n        </form>\n    )\n}\n\nexport default MyRoutinesForm;"]},"metadata":{},"sourceType":"module"}