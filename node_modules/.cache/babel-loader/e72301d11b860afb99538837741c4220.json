{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createRoutine } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutinesItem = ({\n  errorMessage,\n  setErrorMessage,\n  name,\n  goal,\n  creatorName,\n  activities,\n  isPublic,\n  id\n}) => {\n  _s();\n\n  const initialState = {\n    name: name,\n    goal: goal,\n    isPublic: isPublic\n  };\n  const [form, setForm] = useState({ ...initialState // name: name,\n    // goal: goal,\n    // isPublic: isPublic\n\n  });\n  const [toggle, setToggle] = useState(false);\n\n  const handleFormChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleOptionChange = event => {\n    let isPublicValue;\n\n    if (event.target.value == 'true') {\n      isPublicValue = true;\n    } else if (event.target.value == 'false') {\n      isPublicValue = false;\n    }\n\n    setForm({ ...form,\n      isPublic: isPublicValue\n    });\n  };\n\n  const handleEditToggle = () => {\n    setToggle(!toggle);\n    setState({ ...initialState\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setErrorMessage('');\n    const {\n      name,\n      goal,\n      isPublic\n    } = form;\n\n    if (checkRoutineList(name)) {\n      setErrorMessage('This routine already exists! Please choose another name.');\n      return;\n    }\n\n    try {\n      await createRoutine(name, goal, isPublic);\n      setForm({\n        name: '',\n        goal: '',\n        isPublic: false\n      });\n      fetchData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCancel = () => {\n    setToggle(!toggle);\n    setForm({ ...initialState\n    });\n  };\n\n  const handleDelete = async id => {\n    try {\n      const results = await deleteRoutine(id);\n      fetchData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !toggle ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routine\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons\",\n        onClick: handleEditToggle,\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons\",\n        onClick: () => handleDelete(id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Routine: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"routine-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Goal: \", goal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"routine-activities\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Activities: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: activities.length > 0 && activities.map(({\n            name,\n            description,\n            count,\n            duration,\n            routineActivityId\n          }) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [name, \": \", description, \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"count\",\n                children: [\"Count: \", count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 88\n              }, this), \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"duration\",\n                children: [\"Duration: \", duration]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 136\n              }, this)]\n            }, routineActivityId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", isPublic ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"private\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created by: \", creatorName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons\",\n        onClick: handleEditToggle,\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons\",\n        onClick: () => handleDelete(id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Routine:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Routine name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: form.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Routine goal: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"goal\",\n          value: form.goal,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Share your routine?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"isPublic\",\n            value: \"false\",\n            onChange: handleOptionChange,\n            checked: form.isPublic === false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), \" Private\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"isPublic\",\n            value: \"true\",\n            onChange: handleOptionChange,\n            checked: form.isPublic === true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), \" Public\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update routine\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: handleCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MyRoutinesItem, \"pqLeP6VHmiR6i4fk0XPUT473JLg=\");\n\n_c = MyRoutinesItem;\nexport default MyRoutinesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutinesItem\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesItem.jsx"],"names":["React","useState","createRoutine","MyRoutinesItem","errorMessage","setErrorMessage","name","goal","creatorName","activities","isPublic","id","initialState","form","setForm","toggle","setToggle","handleFormChange","event","target","value","handleOptionChange","isPublicValue","handleEditToggle","setState","handleSubmit","preventDefault","checkRoutineList","fetchData","error","console","handleCancel","handleDelete","results","deleteRoutine","length","map","description","count","duration","routineActivityId"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport {createRoutine} from '../api';\n\nconst MyRoutinesItem = ({errorMessage, setErrorMessage, name, goal, creatorName, activities, isPublic, id}) => {\n    const initialState = {\n        name: name,\n        goal: goal,\n        isPublic: isPublic\n    }\n\n    const [form, setForm] = useState({\n        ...initialState\n        // name: name,\n        // goal: goal,\n        // isPublic: isPublic\n    })\n\n    const [toggle, setToggle] = useState(false)\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value});\n    }\n\n    const handleOptionChange = (event) => {\n        let isPublicValue;\n        if (event.target.value == 'true') {\n            isPublicValue = true;\n        } else if (event.target.value == 'false') {\n            isPublicValue = false;\n        }\n        setForm({...form, isPublic: isPublicValue});\n    }\n\n    const handleEditToggle = () => {\n        setToggle(!toggle);\n        setState({...initialState});\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setErrorMessage('');\n        const {name, goal, isPublic} = form;\n        if (checkRoutineList(name)) {\n            setErrorMessage('This routine already exists! Please choose another name.');\n            return;\n        }\n        try {\n            await createRoutine(name, goal, isPublic);\n            setForm({name: '', goal: '', isPublic: false});\n            fetchData();  \n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const handleCancel = () => {\n        setToggle(!toggle);\n        setForm({...initialState});\n    }\n\n    const handleDelete = async (id) => {\n        try {\n            const results = await deleteRoutine(id);\n            fetchData();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <>\n        {!toggle ? (\n            <div key={id} className='routine'>\n                <span className='material-icons' onClick={handleEditToggle}>edit</span>\n                <span className='material-icons' onClick={() => handleDelete(id)}>delete</span>\n                <h3>Routine: <span className='routine-name'>{name}</span></h3>\n                <p>Goal: {goal}</p>\n                <div className='routine-activities'>\n                    <p>Activities: </p>\n                    <ul>\n                        {activities.length > 0 && activities.map(({name, description, count, duration, routineActivityId}) => {\n                            return <li key={routineActivityId}>{name}: {description} | <span className='count'>Count: {count}</span> | <span className='duration'>Duration: {duration}</span></li>\n                        })}\n                    </ul>\n                </div>\n                <p>Status: {isPublic ? <span>public</span> : <span>private</span>}</p>\n                <p>Created by: {creatorName}</p>\n            </div>\n        ) : (\n            <form>\n                <span className='material-icons' onClick={handleEditToggle}>edit</span>\n                <span className='material-icons' onClick={() => handleDelete(id)}>delete</span>\n                <h2>Edit Routine:</h2>\n                <label>\n                    <span>Routine name: </span>\n                    <input type='text' name='name' value={form.name} onChange={handleFormChange} />\n                </label>\n                <label>\n                    <span>Routine goal: </span>\n                    <input type='text' name='goal' value={form.goal} onChange={handleFormChange} />\n                </label>\n                <label>\n                    <span>Share your routine?</span>\n                    <div className='input-radio'>\n                        <input type='radio' name='isPublic' value='false' onChange={handleOptionChange} checked={form.isPublic === false} /> Private\n                        <input type='radio' name='isPublic' value='true' onChange={handleOptionChange} checked={form.isPublic === true}  /> Public    \n                    </div>\n                </label>\n                {errorMessage && (\n                <p className='error-message'>{errorMessage}</p>\n                )}\n                <input type='submit' value='Update routine' onClick={handleSubmit} />\n                <input type='button' onClick={handleCancel} />\n            </form>\n        )}\n        </>\n    )\n}\n\nexport default MyRoutinesItem;"]},"metadata":{},"sourceType":"module"}