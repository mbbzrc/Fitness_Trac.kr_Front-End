{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutines.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchRoutinesByUser, deleteRoutine } from '../api';\nimport { MyRoutinesActivitiesForm, MyRoutinesForm } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = ({\n  currentUser\n}) => {\n  _s();\n\n  const [myRoutinesList, setMyRoutinesList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const results = await fetchRoutinesByUser(currentUser.username);\n      setMyRoutinesList(results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDelete = async id => {\n    try {\n      const results = await deleteRoutine(id);\n      fetchData();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditToggle = id => {\n    const newList = myRoutinesList.map(routine => {\n      if (routine.id === id) {\n        const toggledRoutine = { ...routine,\n          toggled: !routine.toggled\n        };\n        return toggledRoutine;\n      } else {\n        return routine;\n      }\n    });\n    setMyRoutinesList(newList);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"my-routines\",\n      children: [/*#__PURE__*/_jsxDEV(MyRoutinesForm, {\n        fetchData: fetchData,\n        myRoutinesList: myRoutinesList,\n        errorMessage: errorMessage,\n        setErrorMessage: setErrorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Routines:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: myRoutinesList.length > 0 && myRoutinesList.map(({\n          name,\n          goal,\n          creatorName,\n          activities,\n          isPublic,\n          id\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"routine\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              onClick: () => handleEditToggle(id),\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              onClick: () => handleDelete(id),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Routine: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"routine-name\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Goal: \", goal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"routine-activities\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Activities: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: activities.length > 0 && activities.map(({\n                  name,\n                  description,\n                  count,\n                  duration,\n                  routineActivityId\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [name, \": \", description, \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"count\",\n                      children: [\"Count: \", count]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 96\n                    }, this), \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"duration\",\n                      children: [\"Duration: \", duration]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 144\n                    }, this)]\n                  }, routineActivityId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 44\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", isPublic ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"public\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"private\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created by: \", creatorName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MyRoutines, \"1UNgPzCIOH8hgx51a6WC/38SOOY=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutines.jsx"],"names":["React","useState","useEffect","fetchRoutinesByUser","deleteRoutine","MyRoutinesActivitiesForm","MyRoutinesForm","MyRoutines","currentUser","myRoutinesList","setMyRoutinesList","errorMessage","setErrorMessage","fetchData","results","username","error","console","handleDelete","id","handleEditToggle","newList","map","routine","toggledRoutine","toggled","length","name","goal","creatorName","activities","isPublic","description","count","duration","routineActivityId"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport {fetchRoutinesByUser, deleteRoutine} from '../api';\n\nimport {\n    MyRoutinesActivitiesForm,\n    MyRoutinesForm\n} from './index';\n\nconst MyRoutines = ({currentUser}) => {\n    const [myRoutinesList, setMyRoutinesList] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchRoutinesByUser(currentUser.username);\n            setMyRoutinesList(results);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n\n    const handleDelete = async (id) => {\n        try {\n            const results = await deleteRoutine(id);\n            fetchData();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const handleEditToggle = (id) => {\n        const newList = myRoutinesList.map((routine) => {\n            if (routine.id === id) {\n                const toggledRoutine = {\n                    ...routine,\n                    toggled: !routine.toggled\n                }\n                return toggledRoutine;\n            } else {\n                return routine;\n            }\n        })\n        setMyRoutinesList(newList);\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <div id='my-routines'>\n                <MyRoutinesForm fetchData={fetchData} myRoutinesList={myRoutinesList} errorMessage={errorMessage} setErrorMessage={setErrorMessage} />\n                <h2>My Routines:</h2>\n                <ul>\n                    {myRoutinesList.length > 0 && myRoutinesList.map(({name, goal, creatorName, activities, isPublic, id}) => {\n                        return <div key={id} className='routine'>\n                        <span className='material-icons' onClick={() => handleEditToggle(id)}>edit</span>\n                        <span className='material-icons' onClick={() => handleDelete(id)}>delete</span>\n                        <h3>Routine: <span className='routine-name'>{name}</span></h3>\n                        <p>Goal: {goal}</p>\n                        <div className='routine-activities'>\n                            <p>Activities: </p>\n                            <ul>\n                                {activities.length > 0 && activities.map(({name, description, count, duration, routineActivityId}) => {\n                                    return <li key={routineActivityId}>{name}: {description} | <span className='count'>Count: {count}</span> | <span className='duration'>Duration: {duration}</span></li>\n                                })}\n                            </ul>\n                        </div>\n                        <p>Status: {isPublic ? <span>public</span> : <span>private</span>}</p>\n                        <p>Created by: {creatorName}</p>\n                    </div>\n                    })}\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}