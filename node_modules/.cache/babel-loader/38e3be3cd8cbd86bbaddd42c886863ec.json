{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  setUser\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleFormChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value.trim()\n    });\n  };\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    setErrorMessage(null);\n    const {\n      username,\n      password\n    } = form;\n\n    if (!username || !password) {\n      setErrorMessage('Something\\'s not right! Please check and try again.');\n      return;\n    }\n\n    ;\n\n    try {\n      const data = await loginUser(username, password);\n      console.log(\"NEW USER NAME \", data.username);\n      setUser({\n        username: username,\n        loggedIn: true\n      });\n      alert(data.message);\n    } catch ({\n      name,\n      message\n    }) {\n      // setErrorMessage({...errorMessage, message});\n      console.error(message, name);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: form.username,\n        name: \"username\",\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Log in\",\n        onClick: onSubmitHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Need an account? Click \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/account/register\",\n        children: \"here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 39\n      }, this), \" to register.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"vUvXYbBco89Q/YpAAqmuvhcjqRQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/Login.jsx"],"names":["React","useState","Link","loginUser","Login","setUser","form","setForm","username","password","errorMessage","setErrorMessage","handleFormChange","event","target","name","value","trim","onSubmitHandler","preventDefault","data","console","log","loggedIn","alert","message","error"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {loginUser} from '../api';\n\nconst Login = ({setUser}) => {\n    const [form, setForm] = useState({\n        username: '',\n        password: ''\n    })\n\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value.trim()});\n    }\n\n    const onSubmitHandler = async (event) => {\n        event.preventDefault();\n        setErrorMessage(null);\n        const {username, password} = form;\n\n        if (!username || !password) {\n            setErrorMessage('Something\\'s not right! Please check and try again.');\n            return;\n        };\n\n        try {\n            const data = await loginUser(username, password);\n            console.log(\"NEW USER NAME \", data.username)\n            setUser({username: username, loggedIn: true});\n            alert(data.message);\n        } catch ({name, message}) {\n            // setErrorMessage({...errorMessage, message});\n            console.error(message, name);\n        };\n    }\n\n    return (\n        <>\n            <h3>Login</h3>\n            <form>\n                <label>username: </label>\n                <input type='text' value={form.username} name='username' onChange={handleFormChange} />\n                <label>password: </label>\n                <input type='password' name='password' onChange={handleFormChange} />\n                {errorMessage && (\n                    <p className='error-message'>{errorMessage}</p>\n                )}\n                <input type='submit' value='Log in' onClick={onSubmitHandler} />\n            </form>\n            <p>Need an account? Click <Link to='/account/register'>here</Link> to register.</p>\n        </>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}