{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesActivitiesForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchAllActivities } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutinesActivitiesForm = ({\n  errorMessage,\n  setErrorMessage,\n  id\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    name: '',\n    goal: '',\n    isPublic: false\n  });\n  const [activityList, setActivityList] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState({\n    routineId: id,\n    activityId: 0,\n    count: 1,\n    duration: 1\n  });\n\n  const fetchData = async () => {\n    try {\n      const results = await fetchAllActivities();\n      setActivityList(results);\n    } catch (error) {\n      throw error;\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleSelectChange = event => {\n    const selectedIndex = event.target.options.selectedIndex;\n    const activityId = Number(event.target.options[selectedIndex].getAttribute('data-key'));\n    setSelectedActivity({ ...selectedActivity,\n      activityId: activityId\n    });\n  };\n\n  const handleNumberChange = event => {\n    setSelectedActivity({ ...selectedActivity,\n      [event.target.name]: Number(event.target.value)\n    });\n  };\n\n  const handleAddActivity = async event => {\n    event.preventDefault();\n    const {\n      routineId,\n      activityId,\n      count,\n      duration\n    } = selectedActivity;\n\n    try {\n      console.log('ATTEMPTING ADD');\n      const results = await addActivityToRoutine(routineId, activityId, count, duration);\n      console.log(results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"activities\",\n      onChange: handleSelectChange,\n      children: activityList ? activityList.map(({\n        id,\n        name\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          \"data-key\": id,\n          value: name,\n          children: name\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 28\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Count: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"count\",\n        value: selectedActivity.count,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Duration (minutes): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"duration\",\n        value: selectedActivity.duration,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddActivity,\n      children: \"Add to routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRoutinesActivitiesForm, \"gAix4QS1KFXpWqHF8zqoQ46F3YE=\");\n\n_c = MyRoutinesActivitiesForm;\nexport default MyRoutinesActivitiesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutinesActivitiesForm\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/MyRoutinesActivitiesForm.jsx"],"names":["React","useState","useEffect","fetchAllActivities","MyRoutinesActivitiesForm","errorMessage","setErrorMessage","id","form","setForm","name","goal","isPublic","activityList","setActivityList","selectedActivity","setSelectedActivity","routineId","activityId","count","duration","fetchData","results","error","handleSelectChange","event","selectedIndex","target","options","Number","getAttribute","handleNumberChange","value","handleAddActivity","preventDefault","console","log","addActivityToRoutine","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport {fetchAllActivities} from '../api';\n\nconst MyRoutinesActivitiesForm = ({errorMessage, setErrorMessage, id}) => {\n    const [form, setForm] = useState({\n        name: '',\n        goal: '',\n        isPublic: false\n    })\n\n    const [activityList, setActivityList] = useState([]);\n\n    const [selectedActivity, setSelectedActivity] = useState({\n        routineId: id,\n        activityId: 0,\n        count: 1,\n        duration: 1,\n    });\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchAllActivities();\n            setActivityList(results);\n        } catch (error) {\n            throw error;\n        };\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const handleSelectChange = (event) => {\n        const selectedIndex = event.target.options.selectedIndex;\n        const activityId = Number(event.target.options[selectedIndex].getAttribute('data-key'));\n        setSelectedActivity({...selectedActivity, activityId: activityId});\n    }\n\n    const handleNumberChange = (event) => {\n        setSelectedActivity({...selectedActivity, [event.target.name]: Number(event.target.value)});\n    }\n\n    const handleAddActivity = async (event) => {\n        event.preventDefault();\n        const {routineId, activityId, count, duration} = selectedActivity;\n        try {\n            console.log('ATTEMPTING ADD')\n            const results = await addActivityToRoutine(routineId, activityId, count, duration);\n            console.log(results)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <>\n            <select name='activities' onChange={handleSelectChange}>\n                {activityList ? activityList.map(({id, name}) => {\n                    return <option key={id} data-key={id} value={name}>{name}</option>\n                }) : null}\n            </select>\n            {errorMessage && (\n                <p className='error-message'>{errorMessage}</p>\n            )}\n            <label>\n                <span>Count: </span>\n                <input type='number' name='count' value={selectedActivity.count} onChange={handleNumberChange} />\n            </label>\n            <label>\n                <span>Duration (minutes): </span>\n                <input type='number' name='duration' value={selectedActivity.duration} onChange={handleNumberChange} />\n            </label>\n            <button onClick={handleAddActivity}>Add to routine</button>\n        </>\n    )\n}\n\nexport default MyRoutinesActivitiesForm;"]},"metadata":{},"sourceType":"module"}