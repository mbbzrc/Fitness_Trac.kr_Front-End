{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/Activities.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchAllActivities, checkCurrentUser } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Activities = ({\n  currentUser\n}) => {\n  _s();\n\n  const [activityList, setActivityList] = useState([]);\n  const [form, setForm] = useState({\n    name: '',\n    description: ''\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleFormChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value.trim()\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!checkCurrentUser()) {\n      setErrorMessage('You are not logged in!');\n      return;\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const results = await fetchAllActivities();\n      setActivityList(results);\n    } catch (error) {\n      throw error;\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentUser.loggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create new activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Activity name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: form.name,\n          name: \"activity-name\",\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Activity description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: form.description,\n          name: \"activity-description\",\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create activity\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"activities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All activities:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), activityList.length > 0 && activityList.map(({\n        name,\n        description,\n        id\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Activity: \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Activities, \"nVSBCPjKE9a3Xf1ITKw2AtANpX8=\");\n\n_c = Activities;\nexport default Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/Users/anthonybeesley/Documents/Anthony/Coding Bootcamp/course_work/project_17/src/components/Activities.jsx"],"names":["React","useState","useEffect","fetchAllActivities","checkCurrentUser","Activities","currentUser","activityList","setActivityList","form","setForm","name","description","errorMessage","setErrorMessage","handleFormChange","event","target","value","trim","handleSubmit","preventDefault","fetchData","results","error","loggedIn","length","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport {\n    fetchAllActivities,\n    checkCurrentUser\n} from '../api';\n\nconst Activities = ({currentUser}) => {\n    const [activityList, setActivityList] = useState([]);\n\n    const [form, setForm] = useState({\n        name: '',\n        description: ''\n    })\n\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value.trim()});\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (!checkCurrentUser()) {\n            setErrorMessage('You are not logged in!')\n            return;\n        }\n    }\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchAllActivities();\n            setActivityList(results);\n        } catch (error) {\n            throw error;\n        };\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            {currentUser.loggedIn ? (\n            <form>\n                <h2>Create new activity</h2>\n                <label>\n                    <span>Activity name: </span>\n                    <input type='text' value={form.name} name='activity-name' onChange={handleFormChange} />\n                </label>\n                <label>\n                    <span>Activity description: </span>\n                    <input type='text' value={form.description} name='activity-description' onChange={handleFormChange} />\n                </label>\n                {errorMessage && (\n                    <p className='error-message'>{errorMessage}</p>\n                )}\n                <input type='submit' value='Create activity' onClick={handleSubmit} />\n            </form>\n            ) : null\n            }\n            <div id='activities'>\n                <h2>All activities:</h2>\n                {activityList.length > 0 && activityList.map(({name, description, id}) => {\n                    return <div key={id} className='activity'>\n                        <h3>Activity: {name}</h3>\n                        <p>Description: {description}</p>\n                    </div>\n                })}\n            </div>\n        </>\n    );\n}\n\nexport default Activities;"]},"metadata":{},"sourceType":"module"}