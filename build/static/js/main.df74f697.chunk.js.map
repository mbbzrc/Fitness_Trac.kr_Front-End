{"version":3,"sources":["auth/index.js","components/Account.jsx","api/index.js","components/Activities.jsx","components/Home.jsx","components/Login.jsx","components/MyRoutines.jsx","components/MyRoutinesActivitiesForm.jsx","components/MyRoutinesForm.jsx","components/MyRoutinesItemEdit.jsx","components/MyRoutinesItem.jsx","components/Register.jsx","components/Routines.jsx","index.jsx"],"names":["getCurrentUser","currentUser","JSON","parse","localStorage","getItem","checkToken","Account","setCurrentUser","useEffect","setItem","stringify","storeCurrentUser","className","loggedIn","username","href","onClick","removeItem","path","BASE_URL","createHeaders","token","registerUser","password","a","fetch","method","headers","body","response","json","user","ok","Error","data","message","loginUser","fetchAllActivities","createActivity","name","description","deleteActivity","id","fetchAllPublicRoutines","fetchRoutinesByUser","createRoutine","goal","isPublic","updateRoutine","undefined","addActivityToRoutine","routineId","activityId","count","duration","deleteRoutine","getRoutineActivitiesByRoutineId","deleteRoutineActivity","routineActivityId","Activities","useState","form","setForm","errorMessage","setErrorMessage","activityList","setActivityList","fetchData","results","handleFormChange","event","target","value","checkActivityList","activityListLowercase","map","activity","toLowerCase","nameLowercase","includes","handleSubmit","preventDefault","console","error","handleDelete","type","onChange","length","Home","to","Login","trim","MyRoutines","myRoutinesList","setMyRoutinesList","checkRoutineList","myRoutinesListLowercase","routine","creatorName","activities","MyRoutinesActivitiesForm","pendingActivities","setPendingActivities","routineActivities","selectedActivity","setSelectedActivity","handleNumberChange","Number","selectedName","selectedIndex","options","getAttribute","forEach","min","disabled","newObject","newArray","push","pushToStateArray","i","splice","MyRoutinesForm","handleOptionChange","isPublicValue","checked","MyRoutinesItemEdit","setToggle","toggle","initialState","setRoutineActivities","fetchRoutineData","fetchedRoutineActivities","log","Promise","all","MyRoutinesItem","Register","passwordCheck","checkFields","conditions","j","checkPassword","Routines","routineList","setRoutineList","App","storedUser","hasOwnProperty","getStoredUsername","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df74f697.chunk.js","sourcesContent":["export function storeCurrentUser(currentUser) {\n    localStorage.setItem('currentUser', JSON.stringify(currentUser));\n}\n\nexport function getCurrentUser() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    return currentUser ? currentUser : false;\n}\n\nexport function checkToken() {\n    const token = localStorage.getItem('token');\n    return token ? true : false;\n}\n\nexport function clearCurrentUser() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('currentUser');\n}","import React, { useEffect } from 'react';\nimport {storeCurrentUser} from '../auth';\n\nimport {\n    Route,\n    Switch\n} from 'react-router-dom';\n\nimport {\n    Login,\n    Register\n} from './index';\n\nimport {clearCurrentUser} from '../auth';\n\nconst Account = ({currentUser, setCurrentUser}) => {\n    const handleLogout = () => {\n        clearCurrentUser();\n        setCurrentUser({\n            username: '',\n            loggedIn: false\n        });\n    }\n\n    useEffect(() => {\n        storeCurrentUser(currentUser);\n    }, [currentUser])\n\n    return (\n        <div className='account'>\n        {currentUser.loggedIn ? (\n            <>\n                <h2>Welcome, {currentUser.username}!</h2>\n                <div><a href='#' onClick={handleLogout}>Log out</a></div>\n            </>\n        ) : (\n            <Switch>\n                <Route path='/account/login'>\n                    <Login setCurrentUser={setCurrentUser} />\n                </Route>\n                <Route path='/account/register'>\n                    <Register setCurrentUser={setCurrentUser} />\n                </Route>\n            </Switch>                \n        )}\n        </div>\n    );\n}\n\nexport default Account;","export const BASE_URL = 'https://secret-peak-53848.herokuapp.com';\n\nfunction createHeaders() {\n    if (localStorage.getItem('token')) {\n        const token = localStorage.getItem('token');\n        return {\n            'Content-Type':'application/json',\n            'Authorization':`Bearer ${token}`\n        }\n    } else {\n        return {\n            'Content-Type':'application/json'\n        }; \n    };\n}\n\nexport async function registerUser(username, password) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/users/register`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        });\n        const user = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        localStorage.setItem('token', user.token);\n        return user;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function loginUser(username, password) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/users/login`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        localStorage.setItem('token', data.token);\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function fetchAllActivities() {\n    try {\n        const response = await fetch(`${BASE_URL}/api/activities`);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function createActivity(name, description) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/activities`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                name: name,\n                description: description\n            })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function deleteActivity(id) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/activities/${id}`, {\n            method: 'DELETE',\n            headers: createHeaders()\n        })\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        return data;        \n    } catch (error) {\n        \n    }\n}\n\nexport async function fetchAllPublicRoutines() {\n    try {\n        const response = await fetch(`${BASE_URL}/api/routines`);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function fetchRoutinesByUser(username) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/routines/user/${username}`, {\n            method: 'GET',\n            headers: createHeaders()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function createRoutine(name, goal, isPublic) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/routines`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                name: name,\n                goal: goal,\n                isPublic: isPublic\n            })\n        });\n        const data = response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function updateRoutine(name, goal, isPublic, id) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/routines/${id}`, {\n            method: 'PATCH',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                name: name ? name : null,\n                goal: goal ? goal : null,\n                isPublic: isPublic !== undefined ? isPublic : null\n            })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        };\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function addActivityToRoutine(routineId, activityId, count, duration) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/routines/${routineId}/activities`, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                activityId: activityId,\n                count: count,\n                duration: duration\n            })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        }\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function deleteRoutine(id) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/routines/${id}`, {\n            method: 'DELETE',\n            headers: createHeaders()\n        });\n        const data = response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        }\n        return data; \n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getRoutineActivitiesByRoutineId(id) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/routine_activities/${id}`, {\n            method: 'GET',\n            headers: createHeaders()\n        })\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        }\n\n        return data; \n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function deleteRoutineActivity(routineActivityId) {\n    try {\n        const response = await fetch(`${BASE_URL}/api/routine_activities/${routineActivityId}`, {\n            method: 'DELETE',\n            headers: createHeaders()\n        })\n        const data = response.json();\n        if (!response.ok) {\n            throw new Error(data.message);\n        }\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}","import React, { useState, useEffect } from 'react';\n\nimport {createActivity, deleteActivity, fetchAllActivities} from '../api';\n\nimport {checkToken} from '../auth';\n\nconst Activities = ({currentUser}) => {\n    const [form, setForm] = useState({\n        name: '',\n        description: ''\n    })\n\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const [activityList, setActivityList] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchAllActivities();\n            setActivityList(results);\n        } catch (error) {\n            throw error;\n        };\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value});\n    }\n\n    function checkActivityList(name) {\n        const activityListLowercase = activityList.map((activity) => {\n            const activityName = activity.name.toLowerCase();\n            return activityName;\n        });\n        const nameLowercase = name.toLowerCase();\n        return activityListLowercase.includes(nameLowercase);\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setErrorMessage('');\n        const {name, description} = form;\n        if (!name || !description) {\n            setErrorMessage('Both name and description are required!');\n            return;\n        }\n        if (!checkToken()) {\n            setErrorMessage('You are not logged in!');\n            return;\n        };\n        if (checkActivityList(name)) {\n            setErrorMessage('Activity already exists!');\n            return;\n        }\n        try {\n            await createActivity(name, description);\n            setForm({name: '', description: ''})\n            fetchData();\n        } catch (error) {\n            setErrorMessage(error.message)\n            console.error(error);\n        }\n    }\n\n    const handleDelete = async (id) => {\n        await deleteActivity(id);\n        fetchData();\n    }\n\n    return (\n        <>\n            <h2>Activities:</h2>\n            <p>Welcome to Fitness Trac.kr activities! Check out our fitness database below. {currentUser.loggedIn ? 'These activities are visible to all users, so anything you create can be used to customize a new routine.' : null}</p>\n            {currentUser.loggedIn ? (\n            <form>\n                <h3>Create New Activity</h3>\n                <label>\n                    <span>Activity name: </span>\n                    <input type='text' name='name' value={form.name} onChange={handleFormChange} />\n                </label>\n                <label>\n                    <span>Activity description: </span>\n                    <textarea name='description' value={form.description} onChange={handleFormChange} />\n                </label>\n                {errorMessage && (\n                    <p className='error-message'>{errorMessage}</p>\n                )}\n                <input type='submit' value='Create activity' onClick={handleSubmit} />\n            </form>\n            ) : null\n            }\n            <div id='activities'>\n                <h3>All Activities:</h3>\n                {activityList.length > 0 && activityList.map(({name, description, id}) => {\n                    return <div key={id} className='card activity'>\n                        <h4>Activity: <span className='name'>{name}</span></h4>\n                        <p>Description: {description}</p>\n                        <span className='material-icons' onClick={() => handleDelete(id)}>delete</span>\n                    </div>\n                })}\n            </div>\n        </>\n    );\n}\n\nexport default Activities;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Home = () => {\n    return (\n        <>\n            <h2>Welcome to Fitness Trac.kr!</h2>\n            <p><em>Don't walk into the gym without a plan!</em></p>\n            <p>With Fitness Trac.kr, you can create custom <strong><Link to='/activities'>ACTIVITIES</Link></strong> or take advantage of what other users have already contributed. If you're ready for a workout, check out the <strong><Link to='/routines'>ROUTINES</Link></strong> our registered users have customized for you!</p>\n            <p>Interested in building your own routines? <Link to='/account/register'>Create an account</Link> with us! You can keep your routines private or share them with everyone else.</p>\n        </>\n    )\n}\n\nexport default Home;","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {loginUser} from '../api';\n\nconst Login = ({setCurrentUser}) => {\n    const [form, setForm] = useState({\n        username: '',\n        password: ''\n    })\n\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value.trim()});\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setErrorMessage(null);\n        const {username, password} = form;\n\n        if (!username || !password) {\n            setErrorMessage('Something\\'s not right! Please check and try again.');\n            return;\n        };\n\n        try {\n            await loginUser(username, password);\n            setCurrentUser({username: username, loggedIn: true});\n        } catch ({name, message}) {\n            setErrorMessage(message);\n            console.error(name, message);\n        };\n    }\n\n    return (\n        <>\n            <h3>Login</h3>\n            <form>\n                <label>\n                    <span>username: </span>\n                    <input type='text' value={form.username} name='username' onChange={handleFormChange} />                    \n                </label>\n                <label>\n                    <span>password: </span>\n                    <input type='password' name='password' onChange={handleFormChange} />\n                </label>\n                {errorMessage && (\n                    <p className='error-message'>{errorMessage}</p>\n                )}\n                <input type='submit' value='Log in' onClick={handleSubmit} />\n            </form>\n            <p>Need an account? Click <Link to='/account/register'>here</Link> to register.</p>\n        </>\n    );\n}\n\nexport default Login;","import React, {useState, useEffect} from 'react';\n\nimport {fetchRoutinesByUser} from '../api';\n\nimport {\n    MyRoutinesForm,\n    MyRoutinesItem\n} from './index';\n\nconst MyRoutines = ({currentUser}) => {\n    const [myRoutinesList, setMyRoutinesList] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchRoutinesByUser(currentUser.username);\n            setMyRoutinesList(results);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    function checkRoutineList(name) {\n        const myRoutinesListLowercase = myRoutinesList.map((routine) => {\n            const routineName = routine.name.toLowerCase();\n            return routineName;\n        });\n        const nameLowercase = name.toLowerCase();\n        return myRoutinesListLowercase.includes(nameLowercase);\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <h2>My Routines:</h2>\n            <p>Create and customize your personal routines here! It's up to you whether you make them public or keep them private. Be sure to add some activities once you've created a routine.</p>\n            <div id='my-routines'>\n                <MyRoutinesForm\n                    fetchData={fetchData}\n                    myRoutinesList={myRoutinesList}\n                    checkRoutineList={checkRoutineList}\n                />\n                <h3>Existing Routines:</h3>\n                <ul>\n                    {myRoutinesList.length > 0 && myRoutinesList.map(({name, goal, creatorName, activities, isPublic, id}) => {\n                        return <MyRoutinesItem\n                            key={id}\n                            fetchData={fetchData}\n                            checkRoutineList={checkRoutineList}\n                            myRoutinesList={myRoutinesList}\n                            name={name}\n                            goal={goal}\n                            creatorName={creatorName}\n                            activities={activities}\n                            isPublic={isPublic}\n                            id={id}\n                        />\n                    })}\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default MyRoutines;","import React, {useState, useEffect} from 'react';\n\nimport {fetchAllActivities} from '../api';\n\nconst MyRoutinesActivitiesForm = ({pendingActivities, setPendingActivities, routineActivities, errorMessage, setErrorMessage, id}) => {\n    const [activityList, setActivityList] = useState([]);\n\n    const [selectedActivity, setSelectedActivity] = useState({\n        routineId: id,\n        activityId: null,\n        count: 0,\n        duration: 0,\n        name: ''\n    });\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchAllActivities();\n            setActivityList(results);\n        } catch (error) {\n            throw error;\n        };\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const handleSelectChange = (event) => {\n        setErrorMessage(null)\n        const selectedName = event.target.value;\n        const selectedIndex = event.target.options.selectedIndex;\n        const activityId = Number(event.target.options[selectedIndex].getAttribute('data-key'));\n        pendingActivities.forEach((activity) => {\n            if (activityId === activity.activityId) {\n                setErrorMessage('You already queued up this activity!');\n                return;    \n            }\n        })\n        routineActivities.forEach((activity) => {\n            if (activityId === activity.activityId) {\n                setErrorMessage('This activity is already part of your routine!');\n                return;    \n            }\n        })\n        setSelectedActivity({...selectedActivity, activityId: activityId, name: selectedName});\n    }\n\n    const handleNumberChange = (event) => {\n        setErrorMessage(null)\n        setSelectedActivity({...selectedActivity, [event.target.name]: Number(event.target.value)});\n    }\n\n    const pushToStateArray = (selectedActivity) => {\n        const newArray = [...pendingActivities];\n        newArray.push(selectedActivity);\n        return newArray;\n    }\n\n    const handleAddActivity = (event) => {\n        event.preventDefault();\n        setErrorMessage('');\n        if (!selectedActivity.name) {\n            setErrorMessage('Please choose an activity to add to your routine!');\n            return;\n        }\n        if (selectedActivity.count < 1 || selectedActivity.duration < 1) {\n            setErrorMessage('Please set activity count and duration!');\n            return;\n        }\n        const newObject = pushToStateArray(selectedActivity);\n        setPendingActivities(newObject);\n    }\n\n    const handleDelete = (activityId) => {\n        for (let i = 0; i < activityList.length; i++) {\n            if (pendingActivities[i].activityId === activityId) {\n                pendingActivities.splice(i, 1);\n                setPendingActivities([...pendingActivities])\n                return;\n            }\n        }\n    }\n\n    return (\n        <>\n            <select name='activities-list' onChange={handleSelectChange}>\n                <option />\n                {activityList ? activityList.map(({id, name}) => {\n                    return <option key={id} data-key={id} value={name}>{name}</option>\n                }) : null}\n            </select>\n            <label>\n                <span>Count: </span>\n                <input type='number' min='0' name='count' value={selectedActivity.count} onChange={handleNumberChange} />\n            </label>\n            <label>\n                <span>Duration (minutes): </span>\n                <input type='number' min='0' name='duration' value={selectedActivity.duration} onChange={handleNumberChange} />\n            </label>\n            <button disabled={errorMessage ? true : false} onClick={handleAddActivity}>Add activity</button>\n            <ul>\n                {pendingActivities.length > 0 ? pendingActivities.map(({name, count, duration, activityId}) => {\n                    return (\n                        <li key={activityId}>\n                            <span className='material-icons' onClick={() => handleDelete(activityId)}>delete</span> {name} ({count} {count > 1 ? 'reps' : 'rep'} for {duration} {duration > 1 ? 'mins' : 'min'})\n                        </li>\n                    )\n                }) : null}\n            </ul>\n        </>\n    )\n}\n\nexport default MyRoutinesActivitiesForm;","import React, {useState, useEffect} from 'react';\n\nimport {createRoutine} from '../api';\n\nconst MyRoutinesForm = ({fetchData, checkRoutineList}) => {    \n    const [form, setForm] = useState({\n        name: '',\n        goal: '',\n        isPublic: false\n    })\n\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value});\n    }\n\n    const handleOptionChange = (event) => {\n        let isPublicValue;\n        if (event.target.value == 'true') {\n            isPublicValue = true;\n        } else if (event.target.value == 'false') {\n            isPublicValue = false;\n        }\n        setForm({...form, isPublic: isPublicValue});\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setErrorMessage('');\n        const {name, goal, isPublic} = form;\n        if (!name || !goal) {\n            setErrorMessage('Both name and goal are required!');\n            return;\n        }\n        if (checkRoutineList(name)) {\n            setErrorMessage('This routine already exists! Please choose another name.');\n            return;\n        }\n        try {\n            await createRoutine(name, goal, isPublic);\n            setForm({name: '', goal: '', isPublic: false});\n            fetchData();  \n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <form>\n            <h3>Create New Routine:</h3>\n            <label>\n                <span>Routine name: </span>\n                <input type='text' name='name' value={form.name} onChange={handleFormChange} />\n            </label>\n            <label>\n                <span>Routine goal: </span>\n                <input type='text' name='goal' value={form.goal} onChange={handleFormChange} />\n            </label>\n            <label>\n                <span>Share your routine?</span>\n                <div className='input-radio'>\n                    <input type='radio' name='isPublic' value='false' onChange={handleOptionChange} checked={form.isPublic === false} /> Private\n                    <input type='radio' name='isPublic' value='true' onChange={handleOptionChange} checked={form.isPublic === true} /> Public    \n                </div>\n            </label>\n            {errorMessage && (\n            <p className='error-message'>{errorMessage}</p>\n            )}\n            <input type='submit' value='Create routine' onClick={handleSubmit} />\n        </form>\n    )\n}\n\nexport default MyRoutinesForm;","import React, {useEffect, useState} from 'react';\n\nimport {addActivityToRoutine, updateRoutine, getRoutineActivitiesByRoutineId, deleteRoutineActivity} from '../api';\nimport MyRoutinesActivitiesForm from './MyRoutinesActivitiesForm';\n\nconst MyRoutinesItemEdit = ({fetchData, pendingActivities, setPendingActivities, checkRoutineList, setToggle, toggle, name, goal, isPublic, id}) => {\n    const initialState = {\n        name: name,\n        goal: goal,\n        isPublic: isPublic,\n    }\n\n    const [form, setForm] = useState({...initialState})\n\n    const [routineActivities, setRoutineActivities] = useState([]);\n\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const fetchRoutineData = async () => {\n        try {\n            const fetchedRoutineActivities = await getRoutineActivitiesByRoutineId(id);\n            if (!fetchedRoutineActivities) return;\n            setRoutineActivities(fetchedRoutineActivities);\n        } catch (error) {\n            console.log(error);\n        }   \n    }\n\n    useEffect(() => {\n        fetchRoutineData();\n    }, [])\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value});\n    }\n\n    const handleOptionChange = (event) => {\n        let isPublicValue;\n        if (event.target.value == 'true') {\n            isPublicValue = true;\n        } else if (event.target.value == 'false') {\n            isPublicValue = false;\n        }\n        setForm({...form, isPublic: isPublicValue});\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setErrorMessage('');\n        const {name, goal, isPublic} = form;\n        if (checkRoutineList(name) && name !== name) {\n            setErrorMessage('This routine already exists! Please choose another name.');\n            return;\n        }\n        try {\n            if (pendingActivities.length > 0) {\n                await Promise.all(\n                    pendingActivities.map(({routineId, activityId, count, duration}) => {\n                        addActivityToRoutine(routineId, activityId, count, duration);\n                    })\n                )\n            }\n            await updateRoutine(name, goal, isPublic, id);\n            setPendingActivities([]);\n            setToggle(!toggle);\n            fetchData();  \n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const handleCancel = () => {\n        setToggle(!toggle);\n        setForm({...initialState});\n        setPendingActivities([]);\n        fetchData();\n    }\n\n    const handleDelete = async (routineActivityId) => {\n        await deleteRoutineActivity(routineActivityId);\n        fetchRoutineData();\n    }\n\n    return (\n        <form>\n            <h3>Edit Routine:</h3>\n            <label>\n                <span>Routine name: </span>\n                <input type='text' name='name' value={form.name} onChange={handleFormChange} />\n            </label>\n            <label>\n                <span>Routine goal: </span>\n                <input type='text' name='goal' value={form.goal} onChange={handleFormChange} />\n            </label>\n            <label>\n                <span>Share your routine?</span>\n                <div className='input-radio'>\n                    <input type='radio' name='isPublic' value='false' onChange={handleOptionChange} checked={form.isPublic === false} /> Private\n                    <input type='radio' name='isPublic' value='true' onChange={handleOptionChange} checked={form.isPublic === true}  /> Public    \n                </div>\n            </label>\n            <ul>\n            {routineActivities.length > 0 ? routineActivities.map(({name, count, duration, routineActivityId}) => {\n                return (\n                    <li key={routineActivityId}>\n                        <span className='material-icons' onClick={() => handleDelete(routineActivityId)}>delete</span> {name} ({count} {count > 1 ? 'reps' : 'rep'} for {duration} {duration > 1 ? 'mins' : 'min'})\n                    </li>\n                )\n            }) : null}\n            </ul>\n            <label>\n                <span>Add activities to your routine: </span>\n                <MyRoutinesActivitiesForm\n                    id={id}\n                    pendingActivities={pendingActivities}\n                    setPendingActivities={setPendingActivities}\n                    routineActivities={routineActivities}\n                    errorMessage={errorMessage}\n                    setErrorMessage={setErrorMessage} />\n            </label>\n            {errorMessage && (\n            <p className='error-message'>{errorMessage}</p>\n            )}\n            <input type='submit' value='Update routine' disabled={errorMessage ? true : false} onClick={handleSubmit} />\n            <input type='button' value='Cancel' onClick={handleCancel} />\n        </form>\n    )\n}\n\nexport default MyRoutinesItemEdit;","import React, {useState} from 'react';\n\nimport {deleteRoutine} from '../api';\nimport MyRoutinesItemEdit from './MyRoutinesItemEdit';\n\nconst MyRoutinesItem = ({fetchData, checkRoutineList, name, goal, creatorName, activities, isPublic, id}) => {\n    const [toggle, setToggle] = useState(false)\n\n    const [pendingActivities, setPendingActivities] = useState([]);\n\n    const handleEditToggle = () => {\n        setToggle(!toggle);\n    }\n\n    const handleDelete = async (id) => {\n        try {\n            const results = await deleteRoutine(id);\n            fetchData();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <>\n        {!toggle ? (\n            <div key={id} className='card routine'>\n                <h3>Routine: <span className='name'>{name}</span></h3>\n                <p>Goal: {goal}</p>\n                {activities.length > 0 &&\n                <div className='routine-activities'>\n                    <p>Activities: </p>\n                    <ul>\n                        {activities.map(({name, description, count, duration, routineActivityId}) => {\n                            return <li key={routineActivityId}>\n                                <span className='name'>{name}: </span>\n                                <span className='description'>{description} </span>\n                                ({count} {count > 1 ? 'reps' : 'rep'} for {duration} {duration > 1 ? 'mins' : 'min'})\n                            </li>\n                        })}\n                    </ul>\n                </div>\n                }\n                <p>Status: {isPublic ? <span>public</span> : <span>private</span>}</p>\n                <p>Created by: {creatorName}</p>\n                <span className='material-icons' onClick={() => handleDelete(id)}>delete</span>\n                <span className='material-icons' onClick={handleEditToggle}>edit</span>\n            </div>\n        ) : (\n            <MyRoutinesItemEdit\n                fetchData={fetchData}\n                pendingActivities={pendingActivities}\n                setPendingActivities={setPendingActivities}\n                checkRoutineList={checkRoutineList}\n                toggle={toggle}\n                setToggle={setToggle}\n                name={name}\n                goal={goal}\n                creatorName={creatorName}\n                isPublic={isPublic}\n                id={id} />\n        )}\n        </>\n    )\n}\n\nexport default MyRoutinesItem;","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {registerUser} from '../api';\n\nconst Register = ({setCurrentUser}) => {\n    const [form, setForm] = useState({\n        username: '',\n        password: '',\n        passwordCheck: ''\n    })\n\n    const [errorMessage, setErrorMessage] = useState();\n\n    const handleFormChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value.trim()});\n    }\n\n    const checkPassword = (password, passwordCheck) => {\n        const conditions = ['$', '!', '@', '#'];\n        if (password.length < 8) return false;\n        if (password !== passwordCheck) return false;\n        for (let i = 0; i < conditions.length; i++) {\n            for (let j = 0; j < password.length; j++) {\n                if (conditions[i] === password[j]) {\n                    return true;\n                };\n            };\n        };\n        return false;\n    }\n\n    const checkFields = () => {\n        const {username, password, passwordCheck} = form;\n        return username.length < 6 ? false\n        : !checkPassword(password, passwordCheck) ? false\n        : true;\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setErrorMessage(null);\n        const {username, password} = form;\n        try {\n            if (!checkFields()) {\n                setErrorMessage('Something\\'s not right! Please check and try again.');\n                return;\n            } else {\n                await registerUser(username, password);\n                setCurrentUser({username: username, loggedIn: true});\n            };            \n        } catch ({name, message}) {\n            setErrorMessage(message);\n            console.error(name, message);\n        }\n    }\n\n    return (\n        <>\n            <h2>Create an account</h2>\n            <form>\n                <label>\n                    <span>username: </span>\n                    <input type='text' value={form.username} name='username' onChange={handleFormChange} />\n                    <span className='note'>Create a username at least 6 characters long.</span>\n                </label>\n                <label>\n                    <span>password: </span>\n                    <input type='password' name='password' onChange={handleFormChange} />\n                </label>\n                <label>\n                    <span>retype password: </span>\n                    <input type='password' name='passwordCheck' onChange={handleFormChange} />\n                    <span className='note'>Create a password at least 8 characters long and include at least 1 of the following special characters: ( $ ! @ # ).</span>\n                </label>\n                {errorMessage && (\n                    <p className='error-message'>{errorMessage}</p>\n                )}\n                <input type='submit' value='Submit' onClick={handleSubmit} />\n            </form>\n            <p>Already have an account? Click <Link to='/account/login'>here</Link> to log in.</p>\n        </>\n    );\n}\n\nexport default Register;","import React, {useEffect, useState} from 'react';\nimport {fetchAllPublicRoutines} from '../api';\n\nconst Routines = () => {\n    const [routineList, setRoutineList] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            const results = await fetchAllPublicRoutines();\n            setRoutineList(results);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <div id='routines'>\n                <h2>All Routines:</h2>\n                <p>Welcome to Fitness Trac.kr routines! This is where activities work together so you can workout better.</p>\n                {routineList.length > 0 && routineList.map(({name, goal, creatorName, activities, id}) => {\n                    return <div key={id} className='card routine'>\n                        <h3>Routine: <span className='name'>{name}</span></h3>\n                        <p>Goal: {goal}</p>\n                        <div className='routine-activities'>\n                            <p>Activities: </p>\n                            <ul>\n                                {activities.length > 0 && activities.map(({name, description, count, duration, routineActivityId}) => {\n                                    return <li key={routineActivityId}>{name}: {description} | <span className='count'>Count: {count}</span> | <span className='duration'>Duration: {duration}</span></li>\n                                })}\n                            </ul>\n                        </div>\n                        <p>Created by: {creatorName}</p>\n                    </div>\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default Routines;","import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch\n} from 'react-router-dom';\n\nimport {checkToken, getCurrentUser} from './auth';\n\nimport {\n    Routines,\n    MyRoutines,\n    Activities,\n    Account,\n    Home\n} from './components';\n\nconst App = () => {\n    const getStoredUsername = () => {\n        if (getCurrentUser()) {\n            const storedUser = getCurrentUser();\n            if (storedUser.hasOwnProperty('username')) {\n                const storedUsername = storedUser.username;\n                return storedUsername;\n            } else {\n                return '';\n            }\n        } else {\n            return '';\n        }\n    }\n\n    const [currentUser, setCurrentUser] = useState({\n        username: getStoredUsername(),\n        loggedIn: checkToken() ? true : false\n    });\n\n    return (\n        <div className='app'>\n            <h1>Fitness Trac.kr</h1>\n            <Router>\n                <nav>\n                    <Link to='/'>Home</Link>\n                    <Link to='/routines'>Routines</Link>\n                    {currentUser.loggedIn ? <Link to='/my-routines'>My Routines</Link> : null}\n                    <Link to='/activities'>Activities</Link>\n                    <Link to={currentUser.loggedIn ? '/account' : '/account/login'}>Account</Link>                    \n                </nav>\n                <Switch>\n                        <Route path='/routines'>\n                            <Routines />\n                        </Route>\n                        <Route path='/my-routines'>\n                            <MyRoutines currentUser={currentUser} />\n                        </Route>\n                        <Route path='/activities'>\n                            <Activities currentUser={currentUser} />\n                        </Route>\n                        <Route path='/account'>\n                            <Account currentUser={currentUser} setCurrentUser={setCurrentUser} />\n                        </Route>\n                        <Route path='/'>\n                            <Home />\n                        </Route>\n                    </Switch>\n            </Router>\n        </div>\n    );\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}